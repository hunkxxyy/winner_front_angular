{"version":3,"file":"usersLista.component.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-mAvDBbB3.tmp/0/src/app/views/admin/users/usersLista.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Menu,OPERATIONMENU,ORDERBYMENU,LIMITMENU} from './dropDownLists';\n\nimport {APIService} from '../../../globals/services/API.service';\nimport {ErrorService} from '../../../globals/services/error.service';\nimport {GridController} from '../../../globals/TYPES';\nimport {hunkCurrencyPipe} from '../../../globals/pipes/hunkCurrency.pipe';\nimport {markPipe} from './mark.pipe';\n\n\n@Component({\n    selector: 'list-of-partner',\n    moduleId: module.id,\n    templateUrl: 'userslista.component.html',\n    providers: [APIService],\n    styleUrls: [\"userslista.component.css\"],\n    directives: [],\n    pipes: [hunkCurrencyPipe, markPipe]\n})\nexport class usersListaComponent implements OnInit {\n    operationMenu:Menu;\n    rightMenu:Menu;\n    orderByMenu:Menu;\n\n    limitMenu:Menu;\n    gridController:GridController;\n    partners:Array<any>;\n    avaiblePages:Array<number>;\n    lastPage:number;\n    searchByText:boolean = false;\n\n    constructor(private _APIService:APIService,\n                private _ErrorService:ErrorService) {\n        this.operationMenu = OPERATIONMENU;\n\n        this.orderByMenu = ORDERBYMENU;\n        this.limitMenu = LIMITMENU;\n        this.gridController = {\n            limit: 50,\n            offset: 0,\n            orderBy: {\n                name: 'Rögzítés időpontja',\n                alias: 'id'\n            },\n            count: -1,\n            currentPage: 1,\n            PageTurnerShowNumberOfPages: 5,\n            searchText: ''\n        };\n    }\n\n\n    ngOnInit() {\n        this.loadList();\n    }\n\n    loadList() {\n        if (this.gridController.count < 0) this.getCount();\n        let params = '&limit=' + this.gridController.limit + '&offset=' + this.gridController.offset + '&orderBy=' + this.gridController.orderBy.alias;\n\n        let link = 'api/users/where=id>0' + params;\n\n\n        //  console.log(link);\n\n\n        this._APIService.getResponseGET(link, '')\n            .subscribe(\n                data=> {\n                //console.log(data);\n                this.partners = data;\n                this.setPageTurner();\n\n\n            },\n                error=> {\n                console.log(error);\n            }\n        )\n    }\n\n    private  getCount() {\n        this._APIService.getResponseGET('api/users/where=id>0&getCount', '')\n            .subscribe(\n                data=> {\n                console.log(data);\n                this.gridController.count = data;\n\n            },\n                error=> {\n                console.log(error);\n            }\n        )\n\n    }\n\n    setPageTurner() {\n        let pages = this.gridController.count / this.gridController.limit;\n        this.lastPage = Math.ceil(pages);\n        var avaiblePages = [];\n        let midlePoint = Math.ceil(this.gridController.PageTurnerShowNumberOfPages / 2);\n        let startNumber = 1;\n        if (this.gridController.currentPage > midlePoint) {\n            startNumber = this.gridController.currentPage - midlePoint + 1;\n        }\n        if (this.gridController.currentPage > this.lastPage - midlePoint + 1) {\n            startNumber = this.lastPage - this.gridController.PageTurnerShowNumberOfPages + 1;\n\n        }\n        for (let i = 1; i < this.lastPage + 1; i++) {\n\n            if (i >= startNumber)\n                avaiblePages.push(i);\n            if (avaiblePages.length >= this.gridController.PageTurnerShowNumberOfPages) break;\n        }\n        this.avaiblePages = avaiblePages;\n\n    }\n    gotoPage(jump) {\n        if (jump < 1) jump = 1;\n        if (jump > this.lastPage) jump = this.lastPage;\n        this.gridController.currentPage = jump;\n        this.setPageTurner();\n        this.gridController.offset = (jump - 1) * this.gridController.limit;\n        this.loadList();\n\n    }\n\n    menuOpen(menu) {\n        console.log(menu);\n        menu.visible = !menu.visible;\n    }\n\n    changeLimit(limit) {\n        this.gridController.currentPage = Math.ceil(this.gridController.offset / limit);\n\n        this.gridController.limit = limit;\n        this.loadList();\n        this.limitMenu.visible = false;\n\n    }\n\n    changeOrderBy(orderBy) {\n        this.gridController.orderBy = orderBy;\n        this.orderByMenu.visible = false;\n        console.log(this.gridController);\n        this.loadList();\n\n\n    }\n\n    changeOffset(offset) {\n        this.gridController.offset = offset;\n        this.loadList();\n    }\n\n    search(value) {\n        this.gridController.searchText = value;\n        this.loadList();\n\n    }\n\n    runOperation(operation:string) {\n        console.log(operation);\n\n    }\n\n}\n\n\n\n\n\n"]}