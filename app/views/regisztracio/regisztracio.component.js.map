{"version":3,"file":"regisztracio.component.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-vMFTxjIM.tmp/0/src/app/views/regisztracio/regisztracio.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ErrorService,MessageTypes,ErrorMsg} from \"../../globals/services/error.service\";\nimport {APIService} from \"../../globals/services/API.service\";\nimport {userType} from \"./user.type\";\nimport {globals} from \"../../utils/global.constats\";\nimport {AuthService} from  '../../globals/services/auth.service';\nimport {HunkRichTextComponent} from  '../../components/hunk-richtexteditor/hunkRichTexteditor.component';\nimport {HtmlcontentsService} from  '../../globals/services/htmlcontents.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'regisztracio-view',\n  templateUrl: 'htmls/regisztracio.html',\n  providers: [APIService],\n  directives:[HunkRichTextComponent]\n\n})\n\nexport class RegisztracioViewComponent implements OnInit {\n  currentUser:userType = {name: '', email: '', password: ''};\n  submitButtonCaption = 'Regisztráció';\n\n  constructor(\n    private _ErrorService:ErrorService,\n    private _APIService:APIService,\n    private _AuthService:AuthService,\n    public _HtmlcontentsService:HtmlcontentsService) {\n  }\n\n;\n  onRegiser() {\n\n    this._APIService.getResponse('api/user/', this.currentUser).subscribe(\n        data=> {\n        console.log(data);\n        this._ErrorService.errorClear();\n        if (data.message) {\n          let error:ErrorMsg = {\n            type: MessageTypes.mtDanger,\n            msg: data.message.errors\n          }\n          this._ErrorService.setErrorMsg(error);\n        }\n\n        else this.login();\n\n\n      },\n        error=> {\n        console.log(error);\n\n      })\n  }\n\n  login() {\n\n\n    var loginAs = {\n      grant_type: this._AuthService.grantType(),\n      client_id: globals.client_id,\n      client_secret: globals.client_secret,\n      username: this.currentUser.email,\n      password: this.currentUser.password\n\n\n    };\n\n\n    this._APIService.getResponse('oauth/acces_token', loginAs).subscribe(\n        data=> {\n        console.log(data);\n        if (data.msg == 'login success') {\n          this._AuthService.setUser({access_token: data.oauth.access_token});\n          // window.location.href += \"#/ingatlanok\";\n          window.location.reload();\n\n        }\n\n\n      }\n    )\n\n\n  }\n\n  ngOnInit() {\n    if (this._AuthService.logged)\n      window.location.href = \"#/ingatlanok\";\n\n  }\n\n}\n"]}