{"version":3,"file":"errorView.components.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-40FR8OWe.tmp/0/src/app/components/error-view/errorView.components.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyD,eAAe,CAAC,CAAA;AACzE,qBAAwD,eAAe,CAAC,CAAA;AACxE,8BAA2B,sCAAsC,CAAC,CAAA;AAuBlE;IAQG,mBAAmB,aAA0B,EAAW,EAAa;QAAlD,kBAAa,GAAb,aAAa,CAAa;QAAW,OAAE,GAAF,EAAE,CAAW;QAPpE,aAAQ,GAAG,IAAI,KAAK,EAAU,CAAC;QAI/B,cAAS,GAAC,KAAK,CAAC;QAChB,kBAAa,GAAC,YAAY,CAAC;QAC7B,UAAK,GAAQ,SAAS,CAAC;IAMrB,CAAC;IAED,+BAAW,GAAX;QACI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;IAEpC,CAAC;IAED,6BAAS,GAAT;QAEC,+DAA+D;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAC,CAAE,CAAC,CAAA,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAC,WAAW,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,CAAC;QAEN,CAAC;IACH,CAAC;IACH,yBAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACnB,qFAAqF;QACnF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAtDH;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAC,MAAM,CAAC,EAAE;YAClB,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAC,iBAAiB;YAC7B,SAAS,EAAE,CAAC,gBAAgB,CAAC;YAC7B,MAAM,EAAE,CAAC,UAAU,CAAC;YACtB,UAAU,EAAE;gBACV,cAAO,CAAC,iBAAiB,EAAE;oBACzB,YAAK,CAAC,SAAS,EAAE,YAAK,CAAC,EAAC,QAAQ,EAAC,KAAK,EAAC,CAAC,CAAC;oBACzC,YAAK,CAAC,WAAW,EAAE,YAAK,CAAC,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,CAAC;oBAC1C,iBAAU,CAAC,oBAAoB,EAAE;wBAC/B,cAAO,CAAC,eAAe,CAAC;qBACzB,CAAC;oBACF,iBAAU,CAAC,oBAAoB,EAAE;wBAC/B,cAAO,CAAC,gBAAgB,CAAC;qBAC1B,CAAC;iBACH,CAAC;aACH;SAEF,CAAC;;iBAAA;IAsEF,gBAAC;AAAD,CAAC,AArED,IAqEC;AArEY,iBAAS,YAqErB,CAAA","sourcesContent":["import {Component, Directive, ElementRef,  DoCheck} from '@angular/core';\nimport {trigger, state, style, transition,animate} from '@angular/core';\nimport {ErrorService} from \"../../globals/services/error.service\";\n\n\n@Component({\n    moduleId:module.id,\n    selector: 'error-view',\n    templateUrl:'error-view.html',\n    styleUrls: [\"error-view.css\"],\n    inputs: ['errorMsg'],\n  animations: [\n    trigger('movementTrigger', [ //meghatározom az animáció azonosítóját\n      state('noerror', style({'height':'0px'})),\n      state('haveerror', style({'height': '*'})),\n      transition('noerror=>haveerror', [\n        animate('600ms ease-in')\n      ]),\n      transition('haveerror=>noerror', [\n        animate('600ms ease-out')\n      ])\n    ])\n  ]\n\n})\nexport class ErrorView implements DoCheck{\n    errorMsg = new Array<String>();\n\n    private _errorStatus:boolean;\n\n    panelOpen=false;\n    messageStatus='main_error';\n  state:string='noerror';\n   constructor(public _errorService:ErrorService,  private _e:ElementRef) {\n\n\n\n\n    }\n\n    clearErrors() {\n        this._errorService.errorClear();\n\n    }\n\n    ngDoCheck(){\n\n     //   this.state=(this.errorMsg.length>0?'haveerror':'noerror');\n      if (this.errorMsg.length>0 ){\n        this.state='haveerror';\n      }\n      else {\n      //  this.state='noerror';\n      }\n    }\n  clear(){\n    this.errorMsg=[];\n  // this.state=(this.state==='haveerror'?this.state='noerror':this.state='haveerror');\n    console.log(this.state);\n  }\n    /*panel(open:boolean) {\n       let height=(this._errorService.lineCount*16)+25;\n        if (height<50) height=50;\n        this._errorStatus=this._errorService.errorSucces;\n        let before=(open)?0:height;\n        let after=(open)?height:0;\n        let animation = this._ab.css();\n        animation.setDuration(600);\n        animation.setFromStyles({height: before, overflow: 'hidden'}).setToStyles({height: after});\n        animation.start(this._e.nativeElement.children[0]);\n        if (this._errorService.errorSucces==true)\n        {\n            this.messageStatus='main_error_succes';\n\n            setTimeout(()=>{\n                this._errorService.errorClear();\n\n            },1500);\n\n        }else{\n            this.messageStatus='main_error';\n\n        }\n\n\n\n    }*/\n\n\n\n\n\n\n\n}\n"]}