{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-vMFTxjIM.tmp/0/src/app/globals/services/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {AuthType,Privilegium} from '../TYPES';\n\nexport class AuthService {\n    public user:AuthType;\n    public userType:Privilegium=Privilegium.prNotSigned;\n    public logged=false;\n    constructor(){\n    //  this.userDestroy();\n        this.getUser();\n\n\n    }\n    public grantType(){\n        return (this.logged)?'refresh_token':'password';\n    }\n    private getUser() {\n        if (!this.user) {\n            const token=this.getCookie('access_token');\n            const privilegium=this.getCookie('privilegium');\n\n            if (token) {\n\n                this.user = {\n                    access_token:token,\n\n\n                };\n                this.userType=+privilegium;\n                console.log(this.user);\n                this.logged=true;\n\n\n\n            }\n            else {\n                this.user = {\n                    access_token:''\n                };\n                this.userType=Privilegium.prNotSigned;\n                this.logged=false;\n\n            }\n\n        }\n\n        //    console.log(this._user);\n\n    }\n\n    public userDestroy(){\n        this.setCookie('access_token', '', 1);\n        this.setCookie('privilegium', 0, 1);\n        this.userType=Privilegium.prNotSigned;\n        this.logged=false;\n        return this.logged;\n\n    }\n\n    public setUser(authType:AuthType) {\n        this.user = authType;\n        this.setCookie('access_token', this.user.access_token, 7);\n\n        this.logged=true;\n        return this.logged;\n\n    }\n    public setUserType(privilegium:Privilegium) {\n        this.userType=privilegium;\n        this.setCookie('privilegium', privilegium, 7);\n    }\n\n    setCookie(cname, cvalue, exdays) {\n        var d = new Date();\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n        var expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\n    }\n\n    getCookie(cname) {\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) == ' ') c = c.substring(1);\n            if (c.indexOf(name) == 0) return c.substring(name.length, c.length);\n        }\n        return \"\";\n    }\n  }\n"]}