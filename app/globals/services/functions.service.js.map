{"version":3,"file":"functions.service.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-ZnEHOEAm.tmp/0/src/app/globals/services/functions.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {DateType} from '../TYPES';\r\nimport {HunkInputClass} from '../../components/hunkInput/HunkInputType';\r\n\r\n@Injectable()\r\nexport class Functions {\r\n    public compairStrings(str1, str2) {\r\n\r\n        var str1Lover = this.hugarianToEnglish(str1.toLowerCase());\r\n        var str2Lover = this.hugarianToEnglish(str2.toLowerCase());\r\n        return (str1Lover == str2Lover);\r\n\r\n    }\r\n    //public orderByMatchIndex()\r\n    public matchAccent(inThis,sarchThis){\r\n        inThis = this.hugarianToEnglish(inThis.toLowerCase());\r\n        sarchThis = this.hugarianToEnglish(sarchThis.toLowerCase());\r\n\r\n        var index = inThis.indexOf(sarchThis);\r\n        //console.log(inThis+'=='+sarchThis+':'+index);\r\n        return (index!==-1);\r\n    }\r\n    public markSubstring(string, subString, style, faultReturn) {\r\n\r\n        if (!string || !subString ) return  '';\r\n\r\n        var stringLover = this.hugarianToEnglish(string.toLowerCase());\r\n        var subStringLover = this.hugarianToEnglish(subString.toLowerCase());\r\n\r\n        var index = stringLover.indexOf(subStringLover);\r\n\r\n        var indexObj = {\r\n            start: index,\r\n            length: subString.length\r\n\r\n        };\r\n        var part1 = string.substr(0, indexObj.start);\r\n        var part2 = string.substr(indexObj.start, indexObj.length);\r\n        var part3 = string.substr(indexObj.start + indexObj.length);\r\n        if (indexObj.start == -1 && faultReturn) return string;\r\n        else\r\n            return (indexObj.start == -1) ? '' : part1 + '<span class=\"hunkmarked\">' + part2 + '</span>' + part3;\r\n\r\n    }\r\n\r\n    public hugarianToEnglish(hunChar) {\r\n        var hun = ['á', 'é', 'í', 'ó', 'ö', 'ő', 'ú', 'ü', 'ű'];\r\n        var eng = ['a', 'e', 'i', 'o', 'o', 'o', 'u', 'u', 'u'];\r\n        for (var c = 0; c < hunChar.length; c++) {\r\n            for (var i = 0; i < hun.length; i++) {\r\n                //hunChar[c] = hunChar[c].replace(hun[i], eng[i]);\r\n\r\n                if (hunChar[c] == hun[i]) {\r\n                    hunChar = hunChar.replace(hun[i], eng[i]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return hunChar;\r\n    }\r\n\r\n    //---------------DATE-----------------------------------------------\r\n    public dateObjectToDate(date:DateType) {\r\n\r\n\r\n        const y = date.Year;\r\n        const m = (date.Month > 10) ? date.Month : '0' + date.Month;\r\n        const d = (date.Day > 10) ? date.Day : '' + date.Day;\r\n\r\n        return y + '.' + m + '.' + d;\r\n    }\r\n\r\n    public compressRequest(request) {\r\n        var copy = Object.assign({}, request)\r\n        for (var key in copy) {\r\n\r\n            var value = copy[key];\r\n            if (value instanceof Array) {\r\n                let container=[];\r\n                for (var item of copy[key]) {\r\n                    container.push(this.compressRequest(item));\r\n\r\n                }\r\n                copy[key] =container;\r\n            }\r\n            else{\r\n                var compressed=this.compressValue(copy[key])\r\n                if (compressed)\r\n                    copy[key] =compressed ;\r\n                else delete copy[key];\r\n            }\r\n\r\n\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    private compressValue(value) {\r\n\r\n        if (value instanceof HunkInputClass)\r\n            return value.value;\r\n        else if (value== null)\r\n          return false;\r\n        else if (value.id) {\r\n\r\n            return value.id;\r\n\r\n        }\r\n        //else return false;\r\n        //else if (value )  return value;\r\n        else if (value instanceof Object)  return false;\r\n        else return value;\r\n\r\n    }\r\n}\r\n"]}