{"version":3,"file":"error.service.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-iiT2HxTb.tmp/0/src/app/globals/services/error.service.ts"],"names":[],"mappings":";AACA,WAAY,YAAY;IAEpB,yDAAS,CAAA;IACT,mDAAM,CAAA;IACN,yDAAS,CAAA;IACT,uDAAQ,CAAA;AAGZ,CAAC,EARW,oBAAY,KAAZ,oBAAY,QAQvB;AARD,IAAY,YAAY,GAAZ,oBAQX,CAAA;AAMD;IAAA;QAGY,cAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QAChC,cAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QACjC,oBAAe,GAAC,KAAK,CAAC;IAwCjC,CAAC;IArCG,kCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAE1B,CAAC;IACD,kCAAW,GAAX,UAAY,GAAY;QACzB,sBAAsB;QACjB,qBAAqB;QACrB,uDAAuD;QACvD,IAAI,CAAC,WAAW,GAAC,GAAG,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAE;QAGnB,IAAI,CAAC,SAAS,GAAC,GAAG,CAAC,GAAG,CAAC;QAC3B,gCAAgC;QAC7B;4BACoB;IAGvB,CAAC;IACD,mCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,kCAAW,GAAX,UAAY,GAAG;QACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAE5B,CAAC;IAED,iCAAU,GAAV;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IACD,iCAAU,GAAV;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAIL,mBAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,oBAAY,eA6CxB,CAAA","sourcesContent":["import {ErrorType} from '../TYPES';\nexport enum MessageTypes {\n\n    mtSuccess,\n    mtInfo,\n    mtWarning,\n    mtDanger\n\n\n}\nexport interface ErrorMsg{\n    type:MessageTypes,\n    msg:Array<string>\n}\n\nexport class ErrorService {\n    public _errors:ErrorType;\n    public messageType:MessageTypes;\n    private _debugMsg = new Array<String>();\n    private _errorMsg = new Array<String>();\n    public debuggerVisible=false;\n\n\n    getErrorMsg(){\n        return this._errorMsg;\n\n    }\n    setErrorMsg(msg:ErrorMsg) {\n   //   console.log(msg);\n        // this.errorClear();\n        //if (succesError!=this.errorSucces) this.errorClear();\n        this.messageType=msg.type;\n        this.errorClear() ;\n\n\n        this._errorMsg=msg.msg;\n    //  console.log(msg.msg.length);\n       /* console.log('error service msg:');\n        console.log(msg);*/\n\n\n    }\n    getdDebugMsg() {\n        return this._debugMsg;\n    }\n\n    setDebugmSG(msg) {\n        this._debugMsg.push(msg)\n\n    }\n\n    debugClear() {\n        this._debugMsg = [];\n    }\n    errorClear() {\n        this._errorMsg = [];\n    }\n\n\n\n}\n"]}