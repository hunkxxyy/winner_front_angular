{"version":3,"file":"error.service.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-SL1UMPTc.tmp/0/src/app/globals/services/error.service.ts"],"names":[],"mappings":";AACA,WAAY,YAAY;IAEpB,yDAAS,CAAA;IACT,mDAAM,CAAA;IACN,yDAAS,CAAA;IACT,uDAAQ,CAAA;AAGZ,CAAC,EARW,oBAAY,KAAZ,oBAAY,QAQvB;AARD,IAAY,YAAY,GAAZ,oBAQX,CAAA;AAMD;IAAA;QAGY,cAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QAChC,cAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QACjC,oBAAe,GAAC,KAAK,CAAC;IAqCjC,CAAC;IAlCG,kCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAE1B,CAAC;IACD,kCAAW,GAAX,UAAY,GAAY;QACpB,qBAAqB;QACrB,uDAAuD;QACvD,IAAI,CAAC,WAAW,GAAC,GAAG,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAE;QAEnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9B;4BACoB;IAGvB,CAAC;IACD,mCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,kCAAW,GAAX,UAAY,GAAG;QACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAE5B,CAAC;IAED,iCAAU,GAAV;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IACD,iCAAU,GAAV;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAIL,mBAAC;AAAD,CAAC,AA1CD,IA0CC;AA1CY,oBAAY,eA0CxB,CAAA","sourcesContent":["import {ErrorType} from '../TYPES';\r\nexport enum MessageTypes {\r\n\r\n    mtSuccess,\r\n    mtInfo,\r\n    mtWarning,\r\n    mtDanger\r\n\r\n\r\n}\r\nexport interface ErrorMsg{\r\n    type:MessageTypes,\r\n    msg:string\r\n}\r\n\r\nexport class ErrorService {\r\n    public _errors:ErrorType;\r\n    public messageType:MessageTypes;\r\n    private _debugMsg = new Array<String>();\r\n    private _errorMsg = new Array<String>();\r\n    public debuggerVisible=false;\r\n\r\n\r\n    getErrorMsg(){\r\n        return this._errorMsg;\r\n\r\n    }\r\n    setErrorMsg(msg:ErrorMsg) {\r\n        // this.errorClear();\r\n        //if (succesError!=this.errorSucces) this.errorClear();\r\n        this.messageType=msg.type;\r\n        this.errorClear() ;\r\n\r\n        this._errorMsg.push(msg.msg);\r\n       /* console.log('error service msg:');\r\n        console.log(msg);*/\r\n\r\n\r\n    }\r\n    getdDebugMsg() {\r\n        return this._debugMsg;\r\n    }\r\n\r\n    setDebugmSG(msg) {\r\n        this._debugMsg.push(msg)\r\n\r\n    }\r\n\r\n    debugClear() {\r\n        this._debugMsg = [];\r\n    }\r\n    errorClear() {\r\n        this._errorMsg = [];\r\n    }\r\n\r\n\r\n\r\n}"]}