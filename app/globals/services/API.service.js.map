{"version":3,"file":"API.service.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-210jyevP.tmp/0/src/app/globals/services/API.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Http} from \"@angular/http\";\nimport {Headers} from '@angular/http';\nimport {AuthService} from './auth.service';\nimport 'rxjs/Rx';\nimport {globals} from \"../../utils/global.constats\";\n\nconst API_URL=globals.backendIp;\n\n@Injectable()\nexport class APIService {\n/*\n    RESTAPI hiba\n    rossz components esetén enm jön vissza error\n*/\n\n    response:String;\n    private _apiErrors=[];\n\n    constructor(private _http:Http,  private _AuthService:AuthService) {\n\n    }\n    private getHeader(){\n        /* A headerben átküldeni az acces token a következőket kell beállítani:\n         header.append('Authorization', 'Bearer '+token);\n         .httaccess\n         RewriteCond %{HTTP:Authorization} .\n         RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]\n         */\n\n        let token=this._AuthService.user.access_token;\n\n        var header = new Headers();\n        header.append('Content-Type', 'application/json');\n       if (token)\n            header.append('Authorization', 'Bearer '+token);\n\n        return header;\n\n    }\n    public getResponse(methode, params) {\n\n        var json = JSON.stringify(params);\n\n\n\n        let showLog=true;\n        if (showLog){\n            console.log('---   POST  ------');\n            console.log(API_URL+methode);\n            console.log(params);\n            console.log('--- ENDPOST ------');\n\n        }\n        //return this._http.post(\"http://52.28.112.29:8085/\"+methode, json, {\n        return this._http.post(API_URL+methode, json, {\n            headers: this.getHeader()\n        }).map(res => res.json());\n    }\n    public getResponseGET(link, params) {\n\n        let showLog=false;\n        if (showLog){\n            console.log('---   getResponseGET  ------');\n            console.log(API_URL+link);\n            console.log('--- END getResponseGET ------');\n        }\n        return this._http.get(API_URL+link, {\n            headers: this.getHeader()\n        }).map(res => res.json());\n    }\n    public getResponsePUT(methode, params) {\n        var json = JSON.stringify(params);\n\n\n\n        let showLog=false;\n        if (showLog){\n            console.log('---   POST  ------');\n            console.log(API_URL+methode);\n            console.log(params);\n            console.log('--- ENDPOST ------');\n\n        }\n        //return this._http.post(\"http://52.28.112.29:8085/\"+methode, json, {\n        return this._http.put(API_URL+methode, json, {\n            headers: this.getHeader()\n        }).map(res => res.json());\n    }\n\n    public getMenus($logged){\n      let link=($logged)? 'Szintek/menulogged':'Szintek/menu';\n        console.log(link);\n      return this.getResponseGET(link,'');\n\n    }\n    public getHtmls(link){\n\n        return this.getResponseGET('Szintek/tartalom/'+link,'');\n\n    }\n\n    public logOut(){\n        return this.getResponseGET('oauth/exit','');\n    }\n    /*   PUBLIC API Requiests    */\n    public  getDatabase(name, password) {\n        var loginAs = {\n            name: name,\n            password: password\n        };\n        return this.getResponse('api/getDatabase', loginAs);\n    }\n\n    public postItems(item, ifSucces,ifError){\n        var itemsForPost={\n            item:item\n            /*item: {\n                Type: 2,\n                Name: \"hunk --1\",\n                QuantityUnit: \"\",\n                SalesTaxCode: \"\",\n                SalesItemCode: \"\",\n                Barcode: \"\",\n                GroupName: \"\",\n                Description: \"\"\n            }*/\n        };\n       console.log(itemsForPost);\n\n\n        this.getResponse('restAPI/Items', itemsForPost)\n            .subscribe(\n                data=> {\n                    ifSucces();\n\n\n            },\n                error=> { ifError();\n            }\n        )\n\n\n\n\n    }\n\n\n}"]}