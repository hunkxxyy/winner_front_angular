{"version":3,"file":"multipart-uploader.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-mAvDBbB3.tmp/0/src/app/utils/multipart-upload/multipart-uploader.ts"],"names":[],"mappings":";AACA;IAOE,2BAAmB,OAAW;QAAX,YAAO,GAAP,OAAO,CAAI;QAJvB,gBAAW,GAAW,KAAK,CAAC;QAC5B,aAAQ,GAAU,CAAC,CAAC;QACpB,YAAO,GAAW,IAAI,CAAC;QAG5B,gCAAgC;QAChC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACxB,sCAAsC;IACvC,CAAC;IAEM,sCAAU,GAAjB,UAAkB,IAAkB;QACpC,+DAA+D;QAE7D,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAExB,sFAAsF;YACnF,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEO,+CAAmB,GAA3B,UAA4B,IAAQ;QAClC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGO,yCAAa,GAArB,UAAsB,OAAW;QAC/B,IAAI,MAAM,GAAO,EAAE,EAAE,GAAO,EAAE,GAAO,EAAE,CAAK,CAAC;QAE7C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,IAAQ;YAC/B,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAC5C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAE/B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEO,8CAAkB,GAA1B,UAA2B,QAAY,EAAE,OAAW;QAClD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAEO,0CAAc,GAAtB,UAAuB,MAAU;QAC/B,MAAM,CAAC,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,MAAM,KAAK,GAAG,CAAC;IAC3D,CAAC;IAEO,mCAAO,GAAf;QACE,UAAU;IACZ,CAAC;IAED,yCAAa,GAAb,UAAc,IAAQ;QAAtB,iBAkDC;QAjDC,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;QAE9D,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC;QAE3C,kCAAkC;QAClC,uDAAuD;QACvD,GAAG;QAEH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAE/B,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,UAAC,KAAK;QAC9B,CAAC,CAAC;QAEF,GAAG,CAAC,MAAM,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;YACpE,IAAI,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC,CAAC;YAC9D,IAAI,QAAQ,GAAG,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC9D,IAAI,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,OAAO,CAAC;YACjE,IAAI,MAAM,GAAG,KAAK,GAAG,IAAI,GAAG,MAAM,CAAC;YAC7B,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YACzD,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5D,CAAC,CAAC;QAEF,GAAG,CAAC,OAAO,GAAG;YACZ,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;YACrE,IAAI,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC,CAAC;YAC9D,IAAI,QAAQ,GAAG,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC9D,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YACvD,4DAA4D;QAC9D,CAAC,CAAC;QAEF,GAAG,CAAC,OAAO,GAAG;YACZ,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;YACrE,IAAI,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC,CAAC;YAC9D,IAAI,QAAQ,GAAG,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC9D,0DAA0D;YAC1D,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5D,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACtC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACxD,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;QACjE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEM,yCAAa,GAApB,UAAqB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;IACpE,CAAC;IAEM,uCAAW,GAAlB,UAAmB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;QAChE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,wCAAY,GAAnB,UAAoB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;IACnE,CAAC;IAEM,0CAAc,GAArB,UAAsB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;IACrE,CAAC;IAEO,0CAAc,GAAtB,UAAuB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;QACpE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAEM,wCAAY,GAAnB,UAAoB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;QACjE,OAAO,CAAC,KAAK,CAAC,4CAA4C,GAAG,gBAAgB,GAAG,MAAM,CAAC,CAAC;QACxF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAEO,yCAAa,GAArB,UAAsB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IAEM,2CAAe,GAAtB,UAAuB,IAAQ,EAAE,QAAY,EAAE,MAAU,EAAE,OAAW;QACpE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAErD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,2CAA2C;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACH,wBAAC;AAAD,CAAC,AA1JD,IA0JC;AA1JY,yBAAiB,oBA0J7B,CAAA","sourcesContent":["import {MultipartItem} from \"./multipart-item\";\r\nexport class MultipartUploader {\r\n  public url:string;\r\n  public authToken:string;\r\n  public isUploading:boolean = false;\r\n  public progress:number = 0;\r\n  public isHTML5:boolean = true;\r\n\r\n  constructor(public options:any) {\r\n    // Object.assign(this, options);\r\n    console.log('hunk2');\r\n    this.url = options.url;\r\n   // this.authToken = options.authToken;\r\n  }\r\n\r\n  public uploadItem(item:MultipartItem) {\r\n  //  console.debug(\"multipart-uploader.ts & uploadItem() ==>.\");\r\n\r\n    if (this.isUploading) {\r\n\r\n   //   console.debug(\"multipart-uploader.ts & uploadItem() uploader is uploading now.\");\r\n      return;\r\n    }\r\n\r\n    this.isUploading = true;\r\n    this._xhrTransport(item);\r\n  }\r\n\r\n  private _onBeforeUploadItem(item:any) {\r\n    item._onBeforeUpload();\r\n  }\r\n\r\n\r\n  private _parseHeaders(headers:any) {\r\n    let parsed:any = {}, key:any, val:any, i:any;\r\n\r\n    if (!headers) {\r\n      return parsed;\r\n    }\r\n\r\n    headers.split('\\n').map((line:any) => {\r\n      i = line.indexOf(':');\r\n      key = line.slice(0, i).trim().toLowerCase();\r\n      val = line.slice(i + 1).trim();\r\n\r\n      if (key) {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    });\r\n\r\n    return parsed;\r\n  }\r\n\r\n  private _transformResponse(response:any, headers:any):any {\r\n    return response;\r\n  }\r\n\r\n  private _isSuccessCode(status:any) {\r\n    return (status >= 200 && status < 300) || status === 304;\r\n  }\r\n\r\n  private _render() {\r\n    // todo: ?\r\n  }\r\n\r\n  _xhrTransport(item:any) {\r\n    console.debug(\"multipart-uploader.ts & _xhrTransport() ==>.\");\r\n\r\n    let xhr = item._xhr = new XMLHttpRequest();\r\n\r\n    //if (item.formData.length === 0){\r\n    //  throw new TypeError('Invalid form,form is empty.');\r\n    //}\r\n\r\n    this._onBeforeUploadItem(item);\r\n\r\n    xhr.upload.onprogress = (event) => {\r\n    };\r\n\r\n    xhr.onload = () => {\r\n      console.debug(\"multipart-uploader.ts & _xhrTransport.onload() ==>\");\r\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\r\n      let response = this._transformResponse(xhr.response, headers);\r\n      let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\r\n      let method = '_on' + gist + 'Item';\r\n      (<any>this)[method](item, response, xhr.status, headers);\r\n      this._onCompleteItem(item, response, xhr.status, headers);\r\n    };\r\n\r\n    xhr.onerror = () => {\r\n      console.debug(\"multipart-uploader.ts & _xhrTransport.onerror() ==>\");\r\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\r\n      let response = this._transformResponse(xhr.response, headers);\r\n      this._onErrorItem(item, response, xhr.status, headers);\r\n      //this._onCompleteItem(item, response, xhr.status, headers);\r\n    };\r\n\r\n    xhr.onabort = () => {\r\n      console.debug(\"multipart-uploader.ts & _xhrTransport.onabort() ==>\");\r\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\r\n      let response = this._transformResponse(xhr.response, headers);\r\n      //this._onCancelItem(item, response, xhr.status, headers);\r\n      this._onCompleteItem(item, response, xhr.status, headers);\r\n    };\r\n\r\n    xhr.open(item.method, this.url, true);\r\n    xhr.withCredentials = item.withCredentials;\r\n\r\n    if (this.authToken) {\r\n      xhr.setRequestHeader('Authorization', this.authToken);\r\n    }\r\n    console.debug(\"multipart-uploader.ts & _xhrTransport() send...\");\r\n    xhr.send(item.formData);\r\n    console.log(item);\r\n    this._render();\r\n  }\r\n\r\n  public onSuccessItem(item:any, response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onErrorItem(item:any, response:any, status:any, headers:any) {\r\n    this.isUploading = false;\r\n  }\r\n\r\n  public onCancelItem(item:any, response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onCompleteItem(item:any, response:any, status:any, headers:any) {\r\n  }\r\n\r\n  private _onSuccessItem(item:any, response:any, status:any, headers:any) {\r\n    item._onSuccess(response, status, headers);\r\n    this.onSuccessItem(item, response, status, headers);\r\n  }\r\n\r\n  public _onErrorItem(item:any, response:any, status:any, headers:any) {\r\n    console.debug(\"multipart-uploader.ts & _onErrorItem() ==>\" + \" Error status:\" + status);\r\n    item._onError(response, status, headers);\r\n    this.onErrorItem(item, response, status, headers);\r\n  }\r\n\r\n  private _onCancelItem(item:any, response:any, status:any, headers:any) {\r\n    item._onCancel(response, status, headers);\r\n    this.onCancelItem(item, response, status, headers);\r\n  }\r\n\r\n  public _onCompleteItem(item:any, response:any, status:any, headers:any) {\r\n    item._onComplete(response, status, headers);\r\n    this.onCompleteItem(item, response, status, headers);\r\n\r\n    this.isUploading = false;\r\n\r\n    //this.progress = this._getTotalProgress();\r\n    this._render();\r\n  }\r\n}\r\n"]}