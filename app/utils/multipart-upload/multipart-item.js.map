{"version":3,"file":"multipart-item.js","sourceRoot":"","sources":["file:///C:/wamp64/www/ingatlanlotto/winner_front/tmp/broccoli_type_script_compiler-input_base_path-SL1UMPTc.tmp/0/src/app/utils/multipart-upload/multipart-item.ts"],"names":[],"mappings":"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","sourcesContent":["import {MultipartUploader} from \"./multipart-uploader\";\r\n\r\nexport class MultipartItem {\r\n  public alias:string = 'file';\r\n  public url:string = '/';\r\n  public method:string = 'POST';\r\n  public headers:any = [];\r\n  public withCredentials:boolean = true;\r\n  public formData:FormData = null;\r\n  public isReady:boolean = false;\r\n  public isUploading:boolean = false;\r\n  public isUploaded:boolean = false;\r\n  public isSuccess:boolean = false;\r\n  public isCancel:boolean = false;\r\n  public isError:boolean = false;\r\n  public progress:number = 0;\r\n  public index:number = null;\r\n  public callback:Function = null;\r\n\r\n  constructor(private uploader:MultipartUploader) {\r\n  }\r\n\r\n  public upload() {\r\n    try {\r\n  //    console.debug(\"multipart-item.ts & upload() ==>.\");\r\n      this.uploader.uploadItem(this);\r\n    } catch (e) {\r\n      //this.uploader._onCompleteItem(this, '', 0, []);\r\n      //this.uploader._onErrorItem(this, '', 0, []);\r\n    }\r\n  }\r\n\r\n  public init(){\r\n    this.isReady = false;\r\n    this.isUploading = false;\r\n    this.isUploaded = false;\r\n    this.isSuccess = false;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.progress = 0;\r\n    this.formData = null;\r\n    this.callback = null;\r\n  }\r\n\r\n  public onBeforeUpload() {\r\n  }\r\n\r\n  public onProgress(progress:number) {\r\n  }\r\n\r\n  public onSuccess(response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onError(response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onCancel(response:any, status:any, headers:any) {\r\n  }\r\n\r\n  public onComplete(response:any, status:any, headers:any) {\r\n    this.callback(response);\r\n    this.init();\r\n  }\r\n\r\n  private _onBeforeUpload() {\r\n    this.isReady = true;\r\n    this.isUploading = true;\r\n    this.isUploaded = false;\r\n    this.isSuccess = false;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.progress = 0;\r\n    this.onBeforeUpload();\r\n  }\r\n\r\n  private _onProgress(progress:number) {\r\n    this.progress = progress;\r\n    this.onProgress(progress);\r\n  }\r\n\r\n  private _onSuccess(response:any, status:any, headers:any) {\r\n    this.isReady = false;\r\n    this.isUploading = false;\r\n    this.isUploaded = true;\r\n    this.isSuccess = true;\r\n    this.isCancel = false;\r\n    this.isError = false;\r\n    this.progress = 100;\r\n    this.index = null;\r\n    this.onSuccess(response, status, headers);\r\n  }\r\n\r\n  private _onError(response:any, status:any, headers:any) {\r\n    this.isReady = false;\r\n    this.isUploading = false;\r\n    this.isUploaded = true;\r\n    this.isSuccess = false;\r\n    this.isCancel = false;\r\n    this.isError = true;\r\n    this.progress = 0;\r\n    this.index = null;\r\n    this.onError(response, status, headers);\r\n    this.callback(response);\r\n  }\r\n\r\n  private _onCancel(response:any, status:any, headers:any) {\r\n    this.isReady = false;\r\n    this.isUploading = false;\r\n    this.isUploaded = false;\r\n    this.isSuccess = false;\r\n    this.isCancel = true;\r\n    this.isError = false;\r\n    this.progress = 0;\r\n    this.index = null;\r\n    this.onCancel(response, status, headers);\r\n  }\r\n\r\n  private _onComplete(response:any, status:any, headers:any) {\r\n    this.onComplete(response, status, headers);\r\n  }\r\n\r\n  private _prepareToUploading() {\r\n    this.isReady = true;\r\n  }\r\n}\r\n"]}